header{
    background: #BBBBBB;
    padding: 20px 0;
    /*espaçamento para cima e para baixo de 20px,
    e de 0 para a direita e esquerda.*/
}

.caixa{
    position: relative;
    width: 940px;
    margin: 0 auto;
    /*aqui as margens se calcuam sozinhas, pois 
    se eu boto 50 de um lado e 50 do outro, pode 
    ser que numa tela de 1.300 pixels, ele não fique 
    centralizado, se eu boto 200 de um lado e 200 
    do outro, pode ser que numa tela de 1.000 pixels, 
    ele não fique centralizado, por isso, a gente 
    precisa que essa margem da direita e a margem da 
    esquerda, elas se calculem sozinhas, elas sejam 
    automáticas.
    Delegamos para o navegador fazer a conta de 
    calcular a largura que resta, dividir por dois, 
    e adicionar metade em cada um dos lados.*/
}
/*essa classe está centralizando 
o que está dentro do cabeçalho.*/

nav {
    position: absolute;
    /*Com o position: absolute, eu consigo 
    posicionar meu elemento em qualquer 
    lugar da página.*/
    top: 100px;
    right: 0;
}



nav li{
    /*Inline, ele só ocupa o tamanho dele.*/
    display: inline;
    /*aqui definiremos o espaçamento entre um item 
    e outro através da margem. E ela é definida assim: 
    primeiro para o topo, depois para a direita, terceiro 
    para baixo e por ultimo para a esquerda. Como queremos 
    aumentar somente para a esquerda, então só trocaremos 
    o valor dessa.*/
    margin: 0 0 0 15px;
}

nav a{
    /*transformando todas as letras da TAG a em 
    maiúsculas.
    Explicação do Teacher:
    A propriedade text-transform é a responsável 
    pela transformação do texto para maiúsculo, 
    quando usamos o valor uppercase.*/
    text-transform: uppercase;
    color: #000000;
    /*peso da fonte em negrito*/
    font-weight: bold;
    /*tamanho da fonte*/
    font-size: 22px;
    /*aqui retiramos o sublinhado padrão*/
    text-decoration: none;

}
/*para mapear o comportamento dos links que estão 
dentro do menu de navegação, quando o mouse 
passar por cima do elemento usamos o hover, é 
quando mouse está por cima do elemento.*/
nav a:hover{
    /*essa cor vai aparecer ao passar do mouse*/
    color: #C78C19;
     /*o sublinhado vai aparecer ao passar do mouse*/
    text-decoration: underline;
}

.produtos{
    width: 940px;
    margin: 0 auto;
    /*largura da lista por inteiro*/
    padding: 50px 0;
}

.produtos li{
    /*Como o inline-block se comporta?
    O tamanho pode ser ajustado, tanto 
    na largura, quanto na altura.*/
    display: inline-block;
    text-align: center;
    width: 30%;
    /*largura de cada item*/
    vertical-align: top;
    /*os itens vão recarrecar sempre pela linha de cima*/
    margin: 0 1.5%;
    padding: 30px 20px;
    box-sizing: border-box;
    /*essa linha de comando faz com que o item
    com o tamanho dele*/

    /*fazendo a borda.
    Na estrutura de "caixas" do CSS, 
    a borda fica posicionada entre o 
    padding e a margin
    cor da linha
    border-color: #000000;
    tamanho da linha
    border-width: 2px;
    estilo da linha
    border-style: solid;*/

    /*declaração unificada da borda*/
    border: 2px solid #000000;
    /*arredondando os campus*/
    border-radius: 10px; 
}

/*No hover, mapeamos o comportamento do mouse por cima do elemento, e podemos usar isso para destacar visualmente o elemento em questão.*/
.produtos li:hover{
    border-color:#C78C19;
}

/*quando o mouse estiver sendo clicado, o conteúdo
vai ficar verde*/
.produtos li:active{
    border-color:#088C19;
}

/*quando passar o mouse por cima do h2, ele vai mudar de tamanho*/
.produtos li:hover h2{  
    font-size: 34px;
}

.produtos h2{
    font-size: 30px;
    font-weight: bold;
}

.produto-descricao{
    font-size: 18px;
}

.produto-preco{
    font-size: 22px;
    font-weight: bold;
    margin: 10px 0 0;
}

footer{
    text-align:center;
    /*colocanco uma imagem de fundo*/
    background:url("bg.jpg");
    padding:40px 0;
}

.copyrights{
    color: #FFFFFF;
    font-size: 13px;
    margin:20px 0 0;
}

/*centralizando todo o conteúdo*/
.centralizando{
    width: 940px;
    margin: 0 auto;
}

.formulario {
    /*aqui damos o espaçamento entre o cabeçalho e rodapé*/
    margin: 40px 0;
}

form label, form legend{
    display: block;
    font-size: 20px;
    /*espaçamento entre uma label e outra*/
    margin: 0 0 10px;

}

/*aqui tanto os campos de entrada como o campo de texto terão as mesmas configurações*/
.input-padrao{
    display: block;
    margin: 0 0 20px;
    /*A propriedade padding serve para alterarmos o espaçamento interno, entre o conteúdo e a borda.Aumentando o tamanho do campo para cima e para baixo*/
    padding: 10px 25px;
    /*aumentando a largura do campo, para os lados.*/
    width:50%;
}

.checkbox{
    margin:20px 0;
}

.botao-enviar{
    /*aqui aumentamos o tamanho do botão,mexendo na largura dela, fazendo com que ele ocupe 40% da página.*/
    width: 40%;
    /*com o padding daremos o espaçamento entre a borda e o texto. 15px para cima e para baixo e 0 para os lados.*/
    padding: 15px 0;
    background: orange;
    color: white;
    font-weight: bold;
    font-size:18px;
    border: none;
    /*arredondando a borda*/
    border-radius: 5px;
    /*esse elemento faz com que a cor do botão mude gradativamente, deixando essa transição mais suave.
    Explicação do Teacher:
    Utilizamos a propriedade transition para prover uma transição visual de um elemento.*/
    transition: 1s background;
    /*para transformar o cursor em uma mãozinha, assim indicando para o usuário que é possível clicar.*/
    cursor:pointer;
}

.botao-enviar:hover{
    background: darkorange;
    /*A propriedade transform tem muitas possibilidades, uma delas é aumentar o tamanho do elemento, para isso usamos o scale(escala) e definimos a proporção que queremos, ele mesmo faz o calculo multiplicando ele por 1.2*/
    transform:scale(1.2);
}
